name: docker
version: "18.09.7-ce"
summary: Docker Linux container runtime
description: Docker complements kernel namespacing with a high-level API which operates at the process level. It runs unix processes with strong guarantees of isolation and repeatability across servers.

confinement: strict
grade: stable

assumes: [snapd2.38]

passthrough:
  license: (MIT AND Apache-2.0 AND GPL-2.0)
  layout:
    /etc/docker:
      bind: $SNAP_DATA/etc/docker

plugs:
  home:
    read: all
  support:
    interface: docker-support
  privileged:
    interface: docker-support
    privileged-containers: true
  docker-cli:
    interface: docker
slots:
  docker-daemon:
    interface: docker
  docker-executables:
    content: docker-executables
    interface: content
    read:
      - .

apps:
  docker:
    command: docker
    environment:
      GIT_TEMPLATE_DIR: $SNAP/share/git-core/templates
      GIT_CONFIG_NOSYSTEM: "true"
      GIT_EXEC_PATH: $SNAP/libexec/git-core
      GIT_TEXTDOMAINDIR: $SNAP/usr/share/locale
    completer: bin/docker-completion.sh
    plugs:
      - docker-cli
      - network
      - home

  dockerd:
    command: dockerd-wrapper
    daemon: simple
    plugs:
      - network-bind
      - firewall-control
      - support
      - privileged
      - home
    slots:
      - docker-daemon

  compose:
    command: docker-compose
    plugs:
      - docker-cli
      - network
      - home
  machine:
    command: docker-machine
    plugs:
      - docker-cli
      - network
      - home
      - network-bind
  help:
    command: help

parts:
  wrapper-scripts:
    plugin: dump
    source: .
    stage-packages:
      - mount
    stage:
      - bin/*
      - dockerd-patches/*
      - config/daemon.json
    prime:
      - -bin/prep-dockerd-build.sh
      - -bin/go-build-helper.sh
      - -dockerd-patches/*
      - bin/*
      - config/daemon.json

  docker-cli:
    plugin: make
    build-snaps: ["go"]
    source: https://github.com/docker/cli.git
    source-tag: v18.09.7
    override-build: |
      # docker build specific environment variables
      export VERSION=$SNAPCRAFT_PROJECT_VERSION
      export DOCKER_GITCOMMIT=$(git rev-parse --short HEAD)
      export GITCOMMIT=$DOCKER_GITCOMMIT
      export DISABLE_WARN_OUTSIDE_CONTAINER=1

      # setup the go build environment for docker-cli
      . $SNAPCRAFT_STAGE/bin/go-build-helper.sh
      gopartbootstrap github.com/docker/cli

      # build the docker cli binary
      cd $GOPATH/src/github.com/docker/cli
      unset LDFLAGS
      make dynbinary

      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T "$GOPATH/src/github.com/docker/cli/build/docker" "$SNAPCRAFT_PART_INSTALL/bin/docker"
      install -T "$GOPATH/src/github.com/docker/cli/contrib/completion/bash/docker" "$SNAPCRAFT_PART_INSTALL/bin/docker-completion.sh"

  moby:
    plugin: make
    # docker's engine repo is a fork of github.com/moby/moby that helpfully
    # has tags that correspond to docker-ce
    source: https://github.com/docker/engine.git
    source-tag: v18.09.7
    source-depth: 1
    override-build: |
      # docker build specific environment variables
      export VERSION=$SNAPCRAFT_PROJECT_VERSION
      export DOCKER_GITCOMMIT=$(git rev-parse --short HEAD)
      export GITCOMMIT=$DOCKER_GITCOMMIT
      export DISABLE_WARN_OUTSIDE_CONTAINER=1

      # this patches the dockerd sources
      . "$SNAPCRAFT_STAGE/bin/prep-dockerd-build.sh"

      # setup the go build environment for docker/engine
      . $SNAPCRAFT_STAGE/bin/go-build-helper.sh
      gopartbootstrap github.com/docker/engine

      # build the dockerd binary
      ./hack/make.sh dynbinary

      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T "$GOPATH/src/github.com/docker/engine/bundles/latest/dynbinary-daemon/dockerd" "$SNAPCRAFT_PART_INSTALL/bin/dockerd"
    build-snaps: ["go"]
    after: [wrapper-scripts]
    build-packages:
      - btrfs-tools
      - gcc
      - libc6-dev
      - libdevmapper-dev
      - libltdl-dev
      - patch
      - git
      - pkg-config
    stage-packages:
      - zfsutils-linux
      - aufs-tools
      - libltdl7

  # this part is so that things like `docker build -t foobar github.com/foo/bar` work
  git:
    source: https://github.com/git/git
    source-type: git
    source-tag: v2.19.1
    source-depth: 1
    plugin: autotools
    configflags:
      - --with-curl
      - --with-expat
    build-packages:
      - gettext
      - libssl-dev
      - libexpat1-dev
      - zlib1g-dev
    stage-packages:
      - gettext
      - libcurl3
      - libcurl4-openssl-dev

  containerd:
    plugin: make
    source: https://github.com/containerd/containerd.git
    # from : https://github.com/docker/docker-ce/blob/v18.09.7/components/engine/hack/dockerfile/install/containerd.installer
    source-commit: 894b81a4b802e4eb2a91d1ce216b8817763c29fb
    override-build: |
      # setup the go build environment for containerd
      . $SNAPCRAFT_STAGE/bin/go-build-helper.sh
      gopartbootstrap github.com/containerd/containerd

      make GIT_COMMIT= GIT_BRANCH= LDFLAGS=

      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T bin/containerd "$SNAPCRAFT_PART_INSTALL/bin/containerd"
      install -T bin/containerd-shim "$SNAPCRAFT_PART_INSTALL/bin/containerd-shim"
      install -T bin/ctr "$SNAPCRAFT_PART_INSTALL/bin/ctr"
    build-snaps: ["go"]
    after: [wrapper-scripts]
    build-packages:
      - make

  runc:
    plugin: make
    source: https://github.com/opencontainers/runc.git
    # from https://github.com/docker/docker-ce/blob/v18.09.7/components/engine/hack/dockerfile/install/runc.installer
    source-commit: 425e105d5a03fabd737a126ad93d62a9eeede87f
    override-build: |
      # setup the go build environment for runc
      . $SNAPCRAFT_STAGE/bin/go-build-helper.sh
      gopartbootstrap github.com/opencontainers/runc

      make BUILDTAGS='seccomp apparmor selinux' COMMIT=

      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T runc "$SNAPCRAFT_PART_INSTALL/bin/runc"
    build-snaps: ["go"]
    after: [wrapper-scripts]
    build-packages:
      - libapparmor-dev
      - libseccomp-dev
      - make

  libnetwork:
    plugin: make
    source: https://github.com/docker/libnetwork.git
    # from https://github.com/docker/docker-ce/blob/v18.09.7/components/engine/hack/dockerfile/install/proxy.installer
    source-commit: e7933d41e7b206756115aa9df5e0599fc5169742
    override-build: |
      # setup the go build environment for libnetwork
      . $SNAPCRAFT_STAGE/bin/go-build-helper.sh
      gopartbootstrap github.com/docker/libnetwork

      make build-local

      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T bin/docker-proxy "$SNAPCRAFT_PART_INSTALL/bin/docker-proxy"
      install -T bin/dnet "$SNAPCRAFT_PART_INSTALL/bin/dnet"
    build-snaps: ["go"]
    after: [wrapper-scripts]
    build-packages:
      - iptables
      - make

  tini:
    plugin: cmake
    source: https://github.com/krallin/tini.git
    source-type: git
    # from https://github.com/docker/docker-ce/blob/v18.09.7/components/engine/hack/dockerfile/install/tini.installer
    source-commit: fec3683b971d9c3ef73f284f176672c44b448662
    organize:
      "bin/tini-static": bin/docker-init
    build-packages:
      - build-essential
    prime:
      - -bin/tini

  compose:
    plugin: python
    python-version: python2
    source: https://github.com/docker/compose.git
    source-tag: 1.24.1
    source-depth: 1

  machine:
    plugin: make
    source: https://github.com/docker/machine.git
    source-tag: v0.16.1
    source-depth: 1
    override-build: |
      # setup the go build environment for docker machine
      . $SNAPCRAFT_STAGE/bin/go-build-helper.sh
      gopartbootstrap github.com/docker/machine

      make build

      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T bin/docker-machine "$SNAPCRAFT_PART_INSTALL/bin/docker-machine"
    build-snaps: ["go"]
    after: [wrapper-scripts]
# vim:set et ts=2 sw=2:
